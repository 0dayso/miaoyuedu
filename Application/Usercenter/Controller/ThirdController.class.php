<?php
// +-----------------------------------------------------------------------------------------------
// | 红薯 client.hongshu.com
// +-----------------------------------------------------------------------------------------------
// | 第三方登录
// +-----------------------------------------------------------------------------------------------
// | Author: 果农 <zhanghaoping@hongshu.com> <http://www.hongshu.com>
// +-----------------------------------------------------------------------------------------------
// | Datetime: 2017/3/23 下午2:36
// +-----------------------------------------------------------------------------------------------
// | Version $Id:  $
// +-----------------------------------------------------------------------------------------------

namespace Usercenter\Controller;

class ThirdController extends \HS\Controller {

    private $_tmp_cachekey = '';

    public function _initialize() {
        parent::_initialize(); // TODO: Change the autogenerated stub
        //要解决的问题其实就是登录的回调
        $fu = I('fu', '', 'trim');
        if(!$fu) {
            $_GET['fu'] = $_SERVER["HTTP_REFERER"];
        }
        $this->_tmp_cachekey = "thirdlogin_" . session_id() . get_client_ip();
    }

    /**
     * 微信三方登录
     *
     * @param int $iswap 是否wap登录 1：是 0：不是
     */
    public function wechatloginAction() {
        $iswap = I("param.iswap", 0, "intval");
        session("[start]");
        $wapurl = I("param.fu");
        $data = array(
            'url' => rawurlencode($wapurl)
        );
        $memcache = new \HS\MemcacheRedis();
        if ($iswap == 1) {
            $data['iswap'] = 1;
        }
        $memcache->setMc($this->_tmp_cachekey, $data, 600);
        if ($iswap == 1 || session("wechatwaplogin") == 1) {
            session("wechatwaplogin", 1);
            require_once THINK_PATH.'/Library/Org/WxPayPubHelper/WxPayPubHelper.php';

            //使用jsapi接口
            $jsApi = new \Org\WxPayPubHelper\JsApi_pub();

            //=========步骤1：网页授权获取用户openid============
            //触发微信返回code码
            $url = $jsApi->createOauthUrlForCode(get_url(), C('WECHATLOGIN.scope'));
            //通过code获得openid
            $data = array();
            $code = I('code', '', 'trim');
            if (!$code) {
                // echo $url;
                Header("Location: $url");
            } else {
                session("wechatwaplogin", null);
                $jsApi->setCode($code);

                $openid = $jsApi->getOpenId();
                $data = $jsApi->getUserinfo();
                if ($data['errcode']) {
                    redirect('/', 4, '授权失败,请重试');
                }
                // add by 果农 for save unionid to database
                $openid = trim($openid);
                if (!$openid) {
                    redirect('/', 4, '授权失败,请重试');
                }
                $data['unionid'] = $jsApi->unionid;
                $data['openid'] = $openid;
                //\Think\Log::write(print_r($data, 1), 'INFO', '', LOG_PATH . 'WECHAT_LOGIN');
                if ($data['unionid']) {
                    S(C('rdconfig'));
                    $key = $openid.'_____'.$data['unionid'];
                    if(!S($key)){
                        $wuModel = D('WechatUsers');
                        $where = array(
                            'unionid' => $data['unionid'],
                            'openid'  => $data['openid']
                        );
                        $result = $wuModel->where($where)->find();
                        if (!$result) {
                            //数据库中暂时没有这条记录
                            unset($where['unionid']);
                            $where['wid'] = 0;
                            $result = $wuModel->where($where)->find();
                            if (!$result) {
                                $result = $wuModel->token(false)->add($data);
                            } else {
                                $data['id'] = $result['id'];
                                $result = $wuModel->token(false)->save($data);
                            }
                        }
                        if($result!==false){
                            S($key, 1);
                        }
                        //新注册用户直接将unionid写入到数据库的openid中？
                        //$openid = $data['unionid'];
                    }
                }
                // end for save

                $ologin = 4;
                $usermodel = D("User");
                $arr = $usermodel->getUserByOpenid($ologin, $openid, "uid, username, password", $data['unionid']);
                if (!$arr) {
                    $username = $usermodel->makeUsername();
                    $password = \Org\Util\String::randString(12);

                    $uid = $usermodel->add($username, $password, "", "");

                    $data['n_nickname'] = trim(preg_replace('/[\x{10000}-\x{10FFFF}]/u', '', $data['nickname']));       //清除昵称中的utf8mb4字符

                    $nickname = $usermodel->makeNickname($ologin, $data['n_nickname']);
                    if ($uid) {
                        $_from_sid = cookie('_from_sid');
                        if (isset($_from_sid)) {
                            $usermodel->addTjUser($_from_sid, $uid);
                        }
                        $_from_domain = cookie('_from_domain');
                        if (isset($_from_domain)) {
                            $usermodel->addTjSiteUser($_from_domain, $uid);
                        }
                        $data = array();
                        $data["oLogin"] = $ologin;
                        $data["openid"] = $openid;
                        $data['nickname'] = $nickname;
                        $usermodel->updateUser($data, $uid);
                    }
                    $arr = array(
                        'uid'=>$uid,
                        'username'=>$username,
                        'password'=>$usermodel->pwdEncrypt($password)
                    );
                }
                unset($usermodel);
                if($arr['uid'] && $openid) {
                    $M_redis = new \Think\Cache\Driver\Redis(C('rdconfig'));
                    $M_redis->set('txtxiaoshuowx_openid_'.$arr['uid'], $openid);
                }

                $memcache = new \HS\MemcacheRedis();
                $wapinfo = $memcache->getMc($this->_tmp_cachekey);

                if ($wapinfo && is_array($wapinfo)) {
                    $memcache->delMc($this->_tmp_cachekey);
                    unset($memcache);
                    if ($wapinfo['iswap'] == 1) {
                        $wapinfoarr = explode('%2F', $wapinfo['url']);
                        $wapinfoarr[2] = str_replace('%3a', ':', $wapinfoarr[2]);  //for test site
                        header("Content-Type: text/html; charset=utf-8");
                        echo '<html><head><title>正在登录</title></head>'
                        . '<body onload="document.loginform.submit()">'
                        . '<form name="loginform" action="http://' . $wapinfoarr[2] . '/new2old_login.php" method="post">'
                        . '<input type="hidden" name="fu" value="' . $wapinfo['url'] . '"/>'
                        . '<input type="hidden" name="cookietime" value="3600"/>'
                        . '<input type="hidden" name="token" value="' . uc_authcode($arr['username'] . "\t" . $arr['password'], 'ENCODE', C('SECURE_CODE'), 20) . '"/>'
                        . '</form></body></html>';
                    }
                }
            }
        } else {
            $appid = C('WECHATLOGIN')['appid'];
            $redirecturi = C('WECHATLOGIN')['redirecturi'];
            $scope = C('WECHATLOGIN')['scope'];
            $state = substr(md5(uniqid(rand())), 8, -8);
            if($_SERVER["SERVER_NAME"]=='www.miaotest.com') {
                $location = $redirecturi.'?openid='.'o7osow-VLaBGBnx0eTTif3ciiyvk';
            } else {
                $location = C('WECHATLOGIN')['codeurl'] . "?response_type=code&appid=" . $appid . "&redirect_uri=" . urlencode($redirecturi) . "&scope=" . $scope . "&state=" . $state . "#wechat_redirect";
            }
            pre($data);
            echo '<a href="'.$location.'">click</a>';
            exit;
            header("location:" . $location);
        }
    }

    /**
     * 微信三方登录回调
     *
     * @param string $code 微信回传的用于获取accesstoken的code
     * @param string $openid 若传了openid可以直接登录，可不传
     * @param string $iswap 是否wap版，可不传
     */
    public function wechatcallbackAction() {
        $openid = I("param.openid", "", 'trim');
        $iswap = I("param.iswap", 0, "intval");
        $wxUserinfo = array(
            'new_nickname' => ''
        );
        if (!$openid) {
            $code = I("get.code", "", 'trim');
            if ($code) {
                $grant_type = "authorization_code";
                $appid = C('WECHATLOGIN')['appid'];
                $secret = C('WECHATLOGIN')['appsecret'];

                $location = C('WECHATLOGIN')['tokenurl'] . "?code=" . $code . "&grant_type=" . $grant_type . "&appid=" . $appid
                        . "&secret=" . $secret;

                $res = file_get_contents($location);
                $config = json_decode($res, true);
                $access_token = $config["access_token"];
                $openid = trim($config["openid"]);
                $expires_in = $config["expires_in"];

                if (!($access_token && $openid)) {
                    echo "授权失败。";
                    exit(0);
                }
                $wxUserinfo = $this->processWechatUserInfo($access_token, $openid, 4);
            }
        }
        /**
         * 最后再判断一下
         */
        if (!$openid) {
            echo '授权失败。';
            exit(0);
        }
        $ologin = 4;
        $usermodel = new \Client\Model\UserModel();
        $arr = $usermodel->getUserByOpenid($ologin, $openid, "uid, username, password", $wxUserinfo['unionid']);
        if (!$arr) {
            $username = $usermodel->makeUsername();
            $password = \Org\Util\String::randString(12);

            $uid = $usermodel->add($username, $password, "", "");
            $nickname = $usermodel->makeNickname($ologin, $wxUserinfo['new_nickname']);
            if ($uid) {

                $_from_sid = cookie('_from_sid');
                if (isset($_from_sid)) {
                    $usermodel->addTjUser($_from_sid, $uid);
                }
                $_from_domain = cookie('_from_domain');
                if (isset($_from_domain)) {
                    $usermodel->addTjSiteUser($_from_domain, $uid);
                }

                $data["oLogin"] = $ologin;
                $data["openid"] = $openid;
                $data['nickname'] = $nickname;
                $usermodel->updateUser($data, $uid);
            }
            $arr = array(
                'uid'=>$uid,
                'username'=>$username,
                'password'=>$usermodel->pwdEncrypt($password)
            );
        }
        $usermodel->login($arr['uid'], 3546000);
        unset($usermodel);
        $memcache = new \HS\MemcacheRedis();
        $wapinfo = $memcache->getMc($this->_tmp_cachekey);
        $memcache->delMc($this->_tmp_cachekey);
        unset($memcache);
        pre($arr);
        exit('<a href="'.rawurldecode($wapinfo['url']).'">click</a>');
        header('location:'.rawurldecode($wapinfo['url']));
    }

    /**
     * IOS微信三方登录回调
     *
     * @param string $openid 微信身份标识
     * @param string $iswap 是否来源于wap 1：是 0：不是
     * @param string $fu 登录后跳转地址
     */
    public function wechatLoginFromIOSAction(){
        $callbacktmp = I('get.callback');
        $callback = removeXSS($callbacktmp);
        $callback = empty($callback) ? '' : $callback;

        $openid = I("get.openid", "", 'trim');
        $unionid = I('get.unionid', '', 'trim');
        if (!$openid) {
            echoJson(C('MESSAGES.paramerror'), $callback);
            exit(0);
        }

        // add by 果农 for save unionid to database
        if ($openid && $unionid) {
            $key = $openid.'_____'.$unionid;
            if(!S($key)){
                $data = array();
                $data['openid'] = $openid;
                $data['unionid'] = $unionid;
                $wuModel = D('WechatUsers');
                $where = array(
                    'unionid' => $data['unionid'],
                    'openid'  => $data['openid']
                );
                $result = $wuModel->where($where)->find();
                if (!$result) {
                    //数据库中暂时没有这条记录
                    unset($where['unionid']);
                    $where['wid'] = 0;
                    $result = $wuModel->where($where)->find();
                    if (!$result) {
                        $result = $wuModel->token(false)->add($data);
                    } else {
                        $data['id'] = $result['id'];
                        $result = $wuModel->token(false)->save($data);
                    }
                }
                if($result!==false){
                    S($key, 1);
                }
            }
            //新注册用户直接将unionid写入到数据库的openid中？
            //$openid = $unionid;
        }
        // end for save

        $ologin = 4;
        $usermodel = D("User");
        $arr = $usermodel->getUserByOpenid($ologin, $openid, "uid, password,is_deleted,is_locked", $unionid);
        if (!$arr) {
            $username = $usermodel->makeUsername();
            $password = \Org\Util\String::randString(12);

            $uid = $usermodel->add($username, $password, "", "");
            $nickname = $usermodel->makeNickname($ologin);
            if ($uid) {
                $data["oLogin"] = $ologin;
                $data["openid"] = $openid;
                $data['nickname'] = $nickname;
                $usermodel->updateUser($data, $uid);
            }
            $arr = array(
                'uid'=>$uid,
                'username'=>$username,
                'password'=>$usermodel->pwdEncrypt($password)
            );
        } else if ($arr['is_deleted'] || $arr['is_locked']){
            $result = array('code'=>0, 'message'=>'对不起，您的帐号已经被封禁，请和客服联系！', 'P30'=>'');
            echoJson($result, $callback);
            exit;
        }
        //if($arr['uid'] && $openid) {
        //    $M_redis = new \Think\Cache\Driver\Redis(C('rdconfig'));
        //    $M_redis->set('txtxiaoshuowx_openid_'.$arr['uid'], $openid);
        //}
        $p30 = uc_authcode($arr['uid'] . "\t" . md5($arr['password']), 'ENCODE', 'FD1c5BBD@$2d91cfa148EAAC5c7', 31556952);
        //这里的fu其实在IOS中似乎是不使用地。因为IOS的用户首页是做在客户端里的。
        $result = array('code' => 1, 'P30' => $p30, 'msg' => '获取p30成功', 'fu' => 'http://ios.client.miaoyuedu.com/');
        unset($usermodel);
        echoJson($result, $callback);
        exit;
    }

    /**
     * 安卓微信三方登录回调
     *
     * @param string $openid 微信身份标识
     * @param string $iswap 是否来源于wap 1：是 0：不是
     * @param string $fu 登录后跳转地址
     */
    public function wechatLoginFromAndroidAction() {
        $openid = I("param.openid", '', 'trim');
        $unionid = I('param.unionid', '', 'trim');
        $iswap = I("param.iswap", 0, "intval");
        if ($iswap == 1) {
            $wapurl = I("param.fu", "", "rawurlencode");
        }
        //if (!$openid || $unionid) {
        if (!$openid) {
            exit(0);
        }

        // add by 果农 for save unionid to database
        //\Think\Log::write(print_r(array_merge($_GET, $_POST), 1), 'INFO', '', LOG_PATH . 'WECHAT_LOGIN_ANDROID');
        if ($openid && $unionid) {
            S(C('rdconfig'));
            $key = $openid.'_____'.$unionid;
            if(!S($key)){
                $data = array();
                $data['openid'] = $openid;
                $data['unionid'] = $unionid;
                $wuModel = D('WechatUsers');
                $where = array(
                    'unionid' => $data['unionid'],
                    'openid' => $data['openid']
                );
                $result = $wuModel->where($where)->find();
                if (!$result) {
                    //数据库中暂时没有这条记录
                    unset($where['unionid']);
                    $where['wid'] = 0;
                    $result = $wuModel->where($where)->find();
                    if (!$result) {
                        $result = $wuModel->token(false)->add($data);
                    } else {
                        $data['id'] = $result['id'];
                        $result = $wuModel->token(false)->save($data);
                    }
                }
                if($result!==false){
                    S($key, 1);
                }
            }
            //新注册用户直接将unionid写入到数据库的openid中？
            //$openid = $unionid;
        } else {
            \Think\Log::write(print_r(array_merge($_GET, $_POST), 1), 'INFO', '', LOG_PATH . 'WECHAT_LOGIN_ANDROID');
        }
        // end for save

        $ologin = 4;
        $usermodel = new \User\Model\UserModel();
        $arr = $usermodel->getUserByOpenid($ologin, $openid, "uid, username, password", $unionid);
        if (!$arr) {
            $username = $usermodel->makeUsername();
            $password = \Org\Util\String::randString(12);

            $uid = $usermodel->add($username, $password, "", "");
            $nickname = $usermodel->makeNickname($ologin);
            if ($uid) {
                $data["oLogin"] = $ologin;
                $data["openid"] = $openid;
                $data['nickname'] = $nickname;
                $usermodel->updateUser($data, $uid);
            } else {
                E('授权错误，请稍候再试！');
            }
            $arr = array(
                'uid'=>$uid,
                'username'=>$username,
                'password'=>$usermodel->pwdEncrypt($password)
            );
        }
        //if($arr['uid'] && $openid) {
        //    $M_redis = new \Think\Cache\Driver\Redis(C('rdconfig'));
        //    $M_redis->set('txtxiaoshuowx_openid_'.$arr['uid'], $openid);
        //}
        unset($usermodel);

        if ($iswap == 1) {
            $wapinfoarr = explode('%2F', urldecode($wapurl));
            $wapinfoarr[2] = str_replace('%3a', ':', $wapinfoarr[2]);  //for test site
            header("Content-Type: text/html; charset=utf-8");
            echo '<html><head><title>正在登录</title></head>'
            . '<body onload="document.loginform.submit()">'
            . '<form name="loginform" action="http://' . $wapinfoarr[2] . '/new2old_login.php" method="post">'
            . '<input type="hidden" name="fu" value="' . $wapurl . '"/>'
            . '<input type="hidden" name="cookietime" value="3600"/>'
            . '<input type="hidden" name="token" value="' . uc_authcode($arr['username'] . "\t" . $arr['password'], 'ENCODE', C('SECURE_CODE'), 20) . '"/>'
            . '</form></body></html>';
        }
    }

    /**
     * 处理微信用户信息
     * @param type $code
     * @param type $ologin
     */
    private function processWechatUserInfo($code = '', $openid = '', $ologin = '1') {
        require_once THINK_PATH.'/Library/Org/WxPayPubHelper/WxPayPubHelper.php';
        //使用jsapi接口
        $jsApi = new \Org\WxPayPubHelper\JsApi_pub();
        $jsApi->access_token = $code;
        $jsApi->openid = $openid;

        // add by 果农 for save unionid to database
        $data = $jsApi->getUserinfo();
        $data['openid'] = $openid;
        $data['unionid'] = $jsApi->unionid;
        if ($data['unionid']) {
            S(C('rdconfig'));
            $key = $openid.'_____'.$data['unionid'];
            if(!S($key)){
                $wuModel = D('WechatUsers');
                $where = array(
                    'unionid' => $data['unionid'],
                    'openid'  => $data['openid']
                );
                $result = $wuModel->where($where)->find();
                if (!$result) {
                    //数据库中暂时没有这条记录
                    unset($where['unionid']);
                    $where['wid'] = 0;
                    $result = $wuModel->where($where)->find();
                    if (!$result) {
                        $result = $wuModel->token(false)->add($data);
                    } else {
                        $data['id'] = $result['id'];
                        $result = $wuModel->token(false)->save($data);
                    }
                }
                if($result!==false){
                    S($key, 1);
                }
            }
        }
        // end for save

        $usermodel = D("User");
        $data['n_nickname'] = trim(preg_replace('/[\x{10000}-\x{10FFFF}]/u', '', $data['nickname']));       //清除昵称中的utf8mb4字符
        $data['new_nickname'] = $usermodel->makeNickname($ologin, $data['n_nickname']);
        //\Think\Log::write(print_r($data, 1), 'INFO', '', LOG_PATH . 'WECHAT_LOGIN_NICKNAME');
        return $data;
    }
}
